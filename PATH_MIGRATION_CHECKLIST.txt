╔════════════════════════════════════════════════════════════════════════╗
║              项目目录迁移 - 路径验证清单                                 ║
╚════════════════════════════════════════════════════════════════════════╝

您的项目路径: /opt/data/sanli/text_hide/Discop

┌────────────────────────────────────────────────────────────────────────┐
│ 1. 核心代码文件（使用相对路径，无需修改）                                │
└────────────────────────────────────────────────────────────────────────┘

✓ api_server.py          - 所有导入使用相对路径
✓ config.py              - 不包含硬编码路径
✓ model.py               - 不包含硬编码路径
✓ utils.py               - 不包含硬编码路径
✓ stega_cy.pyx           - 不包含硬编码路径
✓ random_sample_cy.pyx   - 不包含硬编码路径
✓ stega_tts.py           - 不包含硬编码路径
✓ setup.py               - 使用相对路径

结论: ✓ 所有代码文件可直接在新目录使用

┌────────────────────────────────────────────────────────────────────────┐
│ 2. 测试脚本（使用环境变量，已适配）                                      │
└────────────────────────────────────────────────────────────────────────┘

✓ test_multi_cycle.py
  - API_HOST = os.getenv("DISCOP_HOST", "localhost")
  - API_PORT = int(os.getenv("DISCOP_PORT", "8002"))
  - API_KEY = os.getenv("DISCOP_API_KEY", "jnu@fenglab")
  → 自动适配，无需修改

✓ test_extended_rounds.py
  - 同上，使用环境变量
  → 自动适配，无需修改

结论: ✓ 测试脚本已自动适配到端口 8002

┌────────────────────────────────────────────────────────────────────────┐
│ 3. 文档文件（已修正为通用路径）                                          │
└────────────────────────────────────────────────────────────────────────┘

✓ ACTION_REQUIRED.txt    - 已移除硬编码路径
✓ REBUILD_REQUIRED.md    - 已移除硬编码路径
✓ API_STATE_FIX.md       - 使用通用说明
✓ README_CONFIG.md       - 使用通用说明
✓ QUICKSTART.txt         - 使用通用命令
✓ 其他 .md 文件          - 不包含绝对路径

结论: ✓ 所有文档已更新为通用路径

┌────────────────────────────────────────────────────────────────────────┐
│ 4. 需要在新目录执行的操作                                                │
└────────────────────────────────────────────────────────────────────────┘

在 /opt/data/sanli/text_hide/Discop 目录下:

1. 重新编译 Cython 模块:
   $ python setup.py build_ext --inplace

2. 启动服务器:
   $ python api_server.py
   或
   $ uvicorn api_server:app --host 0.0.0.0 --port 8002

3. 测试:
   $ python test_multi_cycle.py

┌────────────────────────────────────────────────────────────────────────┐
│ 5. 配置文件验证                                                          │
└────────────────────────────────────────────────────────────────────────┘

检查 api_server.py 中的配置 (第 80-105 行):

  API_KEY = None                    # 或设置为 "jnu@fenglab"
  SERVER_HOST = "0.0.0.0"           # ✓ 适配任何环境
  SERVER_PORT = 8000                # 可改为 8002 或用环境变量

检查 config.py 中的配置 (第 49 行):

  text_default_settings = Settings(
      'text',
      model_name='transfo-xl-wt103',
      top_p=0.92,                    # 建议改为 0.88 提高成功率
      length=100
  )

┌────────────────────────────────────────────────────────────────────────┐
│ 6. 环境变量配置（可选）                                                  │
└────────────────────────────────────────────────────────────────────────┘

如果需要自定义配置，可设置环境变量:

  export DISCOP_API_KEY="jnu@fenglab"
  export DISCOP_HOST="0.0.0.0"
  export DISCOP_PORT=8002
  export DISCOP_RELOAD_STRATEGY="reset"

然后运行:
  python api_server.py

┌────────────────────────────────────────────────────────────────────────┐
│ 7. 验证清单                                                              │
└────────────────────────────────────────────────────────────────────────┘

□ 1. cd /opt/data/sanli/text_hide/Discop
□ 2. ls -la  (确认所有文件都在)
□ 3. python setup.py build_ext --inplace  (重新编译)
□ 4. ls -la stega_cy*.so  (确认 .so 文件已生成)
□ 5. python api_server.py  (启动服务器)
□ 6. 新终端: python test_multi_cycle.py  (测试)
□ 7. 检查测试结果: 应该 4/5 或 5/5 成功

┌────────────────────────────────────────────────────────────────────────┐
│ 8. 可能的问题                                                            │
└────────────────────────────────────────────────────────────────────────┘

问题: ImportError: cannot import name 'reset_global_state'
解决: 需要重新编译 Cython 模块
  $ rm -f stega_cy*.so stega_cy.cpp
  $ python setup.py build_ext --inplace

问题: API 连接失败
解决: 检查端口配置
  - 服务器: 检查 api_server.py 中的 SERVER_PORT
  - 测试: 检查环境变量 DISCOP_PORT 或修改 test_multi_cycle.py

问题: 认证失败
解决: 设置正确的 API key
  $ export DISCOP_API_KEY="jnu@fenglab"

╔════════════════════════════════════════════════════════════════════════╗
║ 结论: ✓ 所有代码已适配为路径无关，可在任意目录运行                     ║
║                                                                         ║
║ 唯一需要做的: 在新目录重新编译 Cython 模块                             ║
║   $ python setup.py build_ext --inplace                                ║
╚════════════════════════════════════════════════════════════════════════╝
